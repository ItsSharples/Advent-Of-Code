import math, collections
def toLocations(line):(x1,y1), (x2,y2) = (map(int, pair) for pair in (point.split(',') for point in line.split(" -> ")));diagonal = (x2 - x1, y2 - y1);divisor = abs(math.gcd(*diagonal));lerp = lambda a, b, t : list(a[i] + b[i] * t for i in range(2));step = list(int(int(diagonal[i])/divisor) for i in range(2));return [lerp((x1, y1), step, d) for d in range(divisor + 1)]
print(sum([1 if x > 1 else 0 for x in collections.Counter([x for line in open("Day 5/Day5", "r").read().splitlines() for x in (map(lambda x: x[0]*1000 + x[1], toLocations(line))) ]).values()]))